// <auto-generated />
using System;
using IntexS3G2.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntexS3G2.API.Migrations.MovieDb
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250410175150_AutoGenerateUserId")]
    partial class AutoGenerateUserId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IntexS3G2.API.Data.MoviesRating", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("show_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.HasKey("user_id", "show_id");

                    b.ToTable("movies_ratings", (string)null);
                });

            modelBuilder.Entity("IntexS3G2.API.Data.Title", b =>
                {
                    b.Property<string>("show_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<bool>("Adventure")
                        .HasColumnType("bit");

                    b.Property<bool>("Anime_Series_International_TV_Shows")
                        .HasColumnType("bit");

                    b.Property<bool>("British_TV_Shows_Docuseries_International_TV_Shows")
                        .HasColumnType("bit");

                    b.Property<bool>("Children")
                        .HasColumnType("bit");

                    b.Property<bool>("Comedies")
                        .HasColumnType("bit");

                    b.Property<bool>("Comedies_Dramas_International_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Comedies_International_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Comedies_Romantic_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Crime_TV_Shows_Docuseries")
                        .HasColumnType("bit");

                    b.Property<bool>("Documentaries")
                        .HasColumnType("bit");

                    b.Property<bool>("Documentaries_International_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Docuseries")
                        .HasColumnType("bit");

                    b.Property<bool>("Dramas")
                        .HasColumnType("bit");

                    b.Property<bool>("Dramas_International_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Dramas_Romantic_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Family_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("Fantasy")
                        .HasColumnType("bit");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Horror_Movies")
                        .HasColumnType("bit");

                    b.Property<bool>("International_Movies_Thrillers")
                        .HasColumnType("bit");

                    b.Property<bool>("International_TV_Shows_Romantic_TV_Shows_TV_Dramas")
                        .HasColumnType("bit");

                    b.Property<bool>("Kids_TV")
                        .HasColumnType("bit");

                    b.Property<bool>("Language_TV_Shows")
                        .HasColumnType("bit");

                    b.Property<bool>("Musicals")
                        .HasColumnType("bit");

                    b.Property<bool>("Nature_TV")
                        .HasColumnType("bit");

                    b.Property<bool>("Reality_TV")
                        .HasColumnType("bit");

                    b.Property<bool>("Spirituality")
                        .HasColumnType("bit");

                    b.Property<bool>("TV_Action")
                        .HasColumnType("bit");

                    b.Property<bool>("TV_Comedies")
                        .HasColumnType("bit");

                    b.Property<bool>("TV_Dramas")
                        .HasColumnType("bit");

                    b.Property<bool>("Talk_Shows_TV_Comedies")
                        .HasColumnType("bit");

                    b.Property<bool>("Thrillers")
                        .HasColumnType("bit");

                    b.Property<string>("cast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("release_year")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("show_id");

                    b.ToTable("movies_titles", (string)null);
                });

            modelBuilder.Entity("IntexS3G2.API.Data.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<bool?>("Amazon_Prime")
                        .HasColumnType("bit");

                    b.Property<bool?>("Apple_TV")
                        .HasColumnType("bit");

                    b.Property<bool?>("Disney")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hulu")
                        .HasColumnType("bit");

                    b.Property<bool?>("Max")
                        .HasColumnType("bit");

                    b.Property<bool?>("Netflix")
                        .HasColumnType("bit");

                    b.Property<bool?>("Paramount")
                        .HasColumnType("bit");

                    b.Property<bool?>("Peacock")
                        .HasColumnType("bit");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("zip")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.ToTable("movies_users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
